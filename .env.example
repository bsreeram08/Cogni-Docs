###############################
# Server Configuration
###############################
HTTP_PORT=3001

###############################
# Provider-Agnostic Configuration
###############################

# Storage provider
# Examples: chroma
STORAGE_NAME=chroma
# STORAGE_OPTIONS must be a JSON object
# Example (Chroma local server):
STORAGE_OPTIONS={"url":"http://localhost:8000"}

# Embeddings provider
# Examples: xenova
EMBEDDINGS_NAME=xenova
# EMBEDDINGS_OPTIONS must be a JSON object
# Example (Xenova local embeddings):
EMBEDDINGS_OPTIONS={"model":"Xenova/all-MiniLM-L6-v2","maxBatchSize":50}

# Alternative (Transformers.js via @huggingface/transformers)
# Examples: transformersjs
# EMBEDDINGS_NAME=transformersjs
# EMBEDDINGS_OPTIONS={"model":"Xenova/all-MiniLM-L6-v2","device":"wasm","pooling":"mean","normalize":true,"maxBatchSize":50}

###############################
# Chunking provider
###############################
# Examples: builtin, chonkie, langchain
CHUNKING_NAME=langchain
# CHUNKING_OPTIONS must be a JSON object
# Example (LangChain recursive strategy):
# - strategy: "recursive"
# - chunkSize: number
# - chunkOverlap: number
CHUNKING_OPTIONS={"strategy":"recursive","chunkSize":3000,"chunkOverlap":150}

# Example (LangChain intelligent strategy):
# - strategy: "intelligent"
# - contentTypeAware: boolean (default true) to adapt separators/size for code/markdown/html
# - chunkSize / chunkOverlap: base values; provider adapts per content type when contentTypeAware=true
# CHUNKING_OPTIONS={"strategy":"intelligent","chunkSize":3000,"chunkOverlap":150,"contentTypeAware":true}

# Example (LangChain semantic strategy):
# - strategy: "semantic"
# - contentTypeAware: boolean (default true) to adapt initial split by detected type
# - semanticSimilarityThreshold: 0..1 (default 0.88) for adjacent-chunk merge
# - semanticMaxMergeChars: max characters for merged spans (default 6000)
# - semanticBatchSize: embeddings batch size (default 64)
# CHUNKING_OPTIONS={"strategy":"semantic","chunkSize":3000,"chunkOverlap":150,"contentTypeAware":true,"semanticSimilarityThreshold":0.9,"semanticMaxMergeChars":6000,"semanticBatchSize":64}

# Optional: Chonkie-TS provider examples (switch provider first)
# CHUNKING_NAME=chonkie
# Example (Chonkie-TS recursive/sentence/token strategies):
# - strategy: "recursive" | "sentence" | "token"
# - chunkSize: number
# - chunkOverlap: number (applies to token/sentence strategies)
# CHUNKING_OPTIONS={"strategy":"recursive","chunkSize":3000,"chunkOverlap":150}

###############################
# Chunking Parameters (back-compat; prefer CHUNKING_OPTIONS)
###############################
CHUNK_SIZE=3000
CHUNK_OVERLAP=150
MAX_CHUNK_SIZE=5000

